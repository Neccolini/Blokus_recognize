画像認識の流れ
1. 盤の領域を取り出す
    1-1. inRange()で白っぽい（銀色のつもり）部分を白、それ以外を黒と言うように二値化する
    1-2. findContours()を用いて二値化した画像からオブジェクトを検出する
    1-3. 盤以外の白い部分もオブジェクトとして認識されるので、その中から最も大きいものを盤とする
    1-4. 盤の角の点を取得したい
        1-4-1. convexHull()で凸包（ある図形を含む最小の凸図形）を取得(1-3.では領域の周りの多くの点が得られるため)
        1-4-2. 1-4-1で取得された図形は四角形とは限らないため、approxPolyDPという多角形を近似する関数で四角形に変換する
    
2. 扱いやすいように正方形に変換する
    2-1. 変換する行列を求める(getPerspectiveTransform())
    2-2. その行列を適用(warpPerspective())
    2-3. 縁の部分を削除
3. 縦横にそれぞれ20分割して400個のマスを取得
4. それぞれの色を特定しブロックが置かれているかを判断
5. 最適な手を計算する
6. 5で求めた最適な手を盤に表示する
7. 最初に受け取った画像に戻す
    7.1 2-1と同様に変換行列を求める
    7.2 変換行列を適用
    7.3 盤以外の部分と盤の部分を結合

